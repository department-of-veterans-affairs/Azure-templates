{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters":   {
    "location": {
      "type": "string"
    },
    "vmName": {
      "type": "string"
    },    
    "vmSize": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "domainToJoin": {
      "type": "string"
    },
    "domainUsername": {
      "type": "string"
    },
    "domainGroupToAdd": {
      "type": "string"
    },    
    "numberOfServersToDeploy": {
        "type": "int",
        "metadata": {}
    },
    "crispComponentURI": {
        "type": "string",
        "metadata": {}
    },
    "provisioningScriptURL": {
      "type": "string"
    },
    "domainPassword": {
      "type": "securestring"
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "osDiskStorageType": {
      "type": "string",
      "allowedValues":
      [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    "windowsOSVersion": {
      "type": "string",
      "metadata": {},
      "allowedValues":
      [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "vmStartInstancePrefix": {
      "type": "int",
      "defaultValue": "1"
      },
    "subnetName": {
      "type": "string",
      "metadata": {}
    },
    "existingVNETName":{
      "type": "string",
      "metadata": {}
    },
    "existingVNETResourceGroupName": {
      "type": "string",
      "metadata": {}
    }    
  },
  "variables": {
    "artifactsLocation": "https://raw.githubusercontent.com/department-of-veterans-affairs/Azure-templates/master/Deploy-Windows-VM-DomainJoin-CRISP/",    
    "vnetRef": "[resourceId(subscription().subscriptionId, parameters('existingVNETResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('existingVNETName'))]",     
    "subnetRef": "[concat(variables('vnetRef'), '/subnets/', parameters('subnetName'))]",
    "provisioningScriptFolder": ".",
    "provisioningScriptFileName": "VMProvisioningScript.ps1"           
  },
  "resources":
  [
    {
        "name": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '_NIC')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[parameters('location')]",
        "apiVersion": "2016-03-30",
        "dependsOn": [],
        "copy": {
            "name": "nicLoop",
            "count": "[parameters('numberOfServersToDeploy')]"
        },
        "properties":
        {
          "ipConfigurations":
          [
            {
              "name": "ipconfig1",
              "properties":
              {
                "privateIPAllocationMethod": "Dynamic",                
                "subnet":
                {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '_NIC')]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfServersToDeploy')]"
    },
      "tags":
      {
        "displayName": "VirtualMachine"
      },
      "properties":
      {
        "hardwareProfile":
        {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile":
        {
          "computerName": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()))]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "windowsConfiguration":
          {
            "timeZone": "Central Standard Time",
            "provisionVMAgent": true
          }
        },
        "storageProfile":
        {
          "imageReference":
          {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk":
          {
            "name": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '_OSdisk')]",
            "managedDisk":
            {
              "storageAccountType": "[parameters('osDiskStorageType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }          
        },
        "networkProfile":
        {
          "networkInterfaces":
          [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '_NIC'))]"
            }
          ]
        }        
      },
      "resources":[
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '/joindomain')]",
        "location": "[parameters('location')]",
        "dependsOn":
        [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()))]"        
        ],
        "tags":
        {
          "displayName": "JsonADDomainExtension"
        },
        "properties":
        {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings":
          {
            "Name": "[parameters('domainToJoin')]",
            "OUPath": "[parameters('ouPath')]",
            "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
            "Restart": "false",
            "Options": "[parameters('domainJoinOptions')]"
          },
          "protectedSettings":
          {
            "Password": "[parameters('domainPassword')]"
          }
        }
      },
      {
        "name": "[concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()), '/ProvisionVM')]",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "location": "[parameters('location')]",
        "apiVersion": "2017-12-01",
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex()))]",
          "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('vmName'), add(parameters('vmStartInstancePrefix'), copyIndex())), 'joindomain')]"
         ],
        "tags": {
          "displayName": "Install CRISP Components"
        },
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.4",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[concat(variables('artifactsLocation'), 'scripts/', variables('provisioningScriptFileName'))]"
            ],
            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('provisioningScriptFolder'), '/', variables('provisioningScriptFileName'), ' ', '\"', parameters('crispComponentURI'),'\"', ' ', parameters('domainGroupToAdd'))]"
          }
        }
      }
    ]
    }       
  ],
  "outputs": {
  }
}