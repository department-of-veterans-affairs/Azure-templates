{
"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
    "location": {
        "type": "string",
        "allowedValues":
        [
            "usgovvirginia",            
            "usgovtexas",
            "usgovarizona"
        ]
    },
    "vmName": {
        "type": "string",
        "metadata": {
            "description": "Name of the VM"
            }
    },
    "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v2"
    },
    "vmAdminUsername": {
        "type": "string",
        "metadata": {
            "description": "Name of the local admin account"
        }
    },
    "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
            "description": "Password for the local admin account"
        }
    },
    "ouPath": {
        "type": "string",        
        "metadata": {
        "description": "For Example: OU=ProjectXYZ,OU=Servers,DC=DOMAIN,DC=GOV"
        }
    },
    "keyVaultName": {
        "type": "string",        
        "metadata": {
            "description": "Name of the key vault for the domain join credentials"
        }
    },
    "keyVaultSecretName": {
        "type": "string",
        "metadata": {
            "description": "Secret name for the domain join user account password"
        }
    },
    "keyVaultResourceGroupName": {
        "type": "string",
        "metadata": {
            "description": "Resource group where the key vault is located"
        }
    }, 
    "domainToJoin": {
        "type": "string",
        "defaultValue": "va.gov",
        "metadata": {
            "description": "Name of the domain to join."
        }
    },   
    "crispComponentURI": {
        "type": "string",
        "metadata": {
            "description": "Location of the CRISP package. Should be the SAS token URL for ChocolateyPackages.zip"
        }
    },   
    "domainGroupToAdd": {
        "type": "string",
        "metadata": {
            "description": "Name of the domain group to add to remote desktop users"
        }
    },
    "numberOfServersToDeploy": {
        "type": "int",
        "metadata": {
            "description": "Number of servers to deploy"
        }
    },
    "vmStartInstanceSuffix": {
        "type": "int",        
        "metadata": {
            "description": "Defines the number by which the VMs will be labeled. Should match the environment, i.e. DEVTEST would start at 900"
        }
    
    },
    "subnetName": {
        "type": "string",
        "metadata": {
            "description": "Subnet to join"
        }
    },
    "existingVNETName":{
        "type": "string",
        "metadata": {
            "description": "Name of the virtual network assigned to your project"
        }
    },
    "existingVNETResourceGroupName": {
        "type": "string",
        "metadata": {
            "description": "Resource Group name where the virtual network is located"
        }
    },
    "windowsOSVersion": {
        "type": "string",
        "metadata": {
            "description": "Windows version to deploy"
        },
        "allowedValues":
        [
          "2012-R2-Datacenter",
          "2016-Datacenter"
        ]
      },        
    "osDiskStorageType": {
        "type": "string",
        "metadata": {
            "description": "Storage type for OS disk"
        },
        "allowedValues": [
            "Standard_LRS",
            "Premium_LRS"
        ]
    },
    "keyvaultSubscriptionId": {
        "type": "string",
        "metadata": {
            "description": "SubscriptionId for the keyvault where domain join creds are located. See internal deployment guide for details"
        }
    }    
},
"variables": {
    "artifactsLocation": "https://raw.githubusercontent.com/department-of-veterans-affairs/Azure-templates/master/Deploy-Windows-VM-DomainJoin-CRISP/scripts",
    "domainUserName": "[parameters('keyVaultSecretName')]",                  
    "domainJoinOptions": "3",
    "keyVaultRef": "[concat('/subscriptions/', parameters('keyvaultSubscriptionId'), '/resourceGroups/', parameters('keyVaultResourceGroupName'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]",
    "provisioningScriptFolder": ".",
    "provisioningScriptFileName": "VMProvisioningScript.ps1",
    "domainPassword": {
        "reference": {
            "keyVault": {
                "id": "[variables('keyVaultRef')]"
            },
            "secretName": "[parameters('keyVaultSecretName')]"
        }
    }              
},
"resources": [
    {
        "name": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '_NIC')]",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[parameters('location')]",
        "apiVersion": "2016-03-30",
        "dependsOn": [],
        "copy": {
             "name": "nicLoop",
             "count": "[parameters('numberOfServersToDeploy')]"
           },
        "properties":
        {
          "ipConfigurations":
           [
             {
              "name": "ipconfig1",
              "properties":
               {
                "privateIPAllocationMethod": "Dynamic",                
                "subnet":
                {
                  "id": "[variables('subnetRef')]"
                }
               }
             }
           ]
          }
       },
       {
           "apiVersion": "2016-04-30-preview",
           "type": "Microsoft.Compute/virtualMachines",
           "name": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()))]",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '_NIC')]"
           ],
           "copy": {
             "name": "vmLoop",
             "count": "[parameters('numberOfServersToDeploy')]"
         },
           "tags":
           {
             "displayName": "VirtualMachine"
           },
           "properties":
           {
             "hardwareProfile":
             {
               "vmSize": "[parameters('vmSize')]"
             },
             "osProfile":
             {
               "computerName": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()))]",
               "adminUsername": "[parameters('vmAdminUsername')]",
               "adminPassword": "[parameters('vmAdminPassword')]",
               "windowsConfiguration":
               {
                 "timeZone": "Central Standard Time",
                 "provisionVMAgent": true
               }
             },
             "storageProfile":
             {
               "imageReference":
               {
                 "publisher": "MicrosoftWindowsServer",
                 "offer": "WindowsServer",
                 "sku": "[parameters('windowsOSVersion')]",
                 "version": "latest"
               },
               "osDisk":
               {
                 "name": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '_OSdisk')]",
                 "managedDisk":
                 {
                   "storageAccountType": "[parameters('osDiskStorageType')]"
                 },
                 "caching": "ReadWrite",
                 "createOption": "FromImage"
               }          
             },
             "networkProfile":
             {
               "networkInterfaces":
               [
                 {
                   "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '_NIC'))]"
                 }
               ]
             }        
           },
           "resources":[
           {
             "apiVersion": "2016-04-30-preview",
             "type": "Microsoft.Compute/virtualMachines/extensions",
             "name": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '/joindomain')]",
             "location": "[parameters('location')]",
             "dependsOn":
             [
               "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()))]"        
             ],
             "tags":
             {
               "displayName": "JsonADDomainExtension"
             },
             "properties":
             {
               "publisher": "Microsoft.Compute",
               "type": "JsonADDomainExtension",
               "typeHandlerVersion": "1.3",
               "autoUpgradeMinorVersion": true,
               "settings":
               {
                 "Name": "[parameters('domainToJoin')]",
                 "OUPath": "[parameters('ouPath')]",
                 "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                 "Restart": "false",
                 "Options": "[parameters('domainJoinOptions')]"
               },
               "protectedSettings":
               {
                 "Password": "[parameters('domainPassword')]"
               }
             }
           },
           {
             "name": "[concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()), '/ProvisionVM')]",
             "type": "Microsoft.Compute/virtualMachines/extensions",
             "location": "[parameters('location')]",
             "apiVersion": "2017-12-01",
             "dependsOn": [
               "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex()))]",
               "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(parameters('vmName'), add(parameters('vmStartInstanceSuffix'), copyIndex())), 'joindomain')]"
              ],
             "tags": {
               "displayName": "Install CRISP Components"
             },
             "properties": {
               "publisher": "Microsoft.Compute",
               "type": "CustomScriptExtension",
               "typeHandlerVersion": "1.4",
               "autoUpgradeMinorVersion": true,
               "settings": {
                 "fileUris": [
                   "[concat(variables('artifactsLocation'), '/', variables('provisioningScriptFileName'))]"
                 ],
                 "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('provisioningScriptFolder'), '/', variables('provisioningScriptFileName'), ' ', '\"', parameters('crispComponentURI'),'\"', ' ', parameters('domainGroupToAdd'))]"
               }
             }
           }
         ]
       }                   
    ],
    "outputs":
    {
  
    }
  }
